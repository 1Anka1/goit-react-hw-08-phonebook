{"version":3,"file":"static/js/724.d3a90e7d.chunk.js","mappings":"6OAKA,EALqB,CACnBA,MAAO,GACPC,SAAU,ICeZ,EAjBe,CACbD,MAAO,CACLE,MAAO,aACPC,KAAM,QACNC,KAAM,QACNC,YAAa,mBACbC,UAAU,GAEZL,SAAU,CACRC,MAAO,gBACPC,KAAM,WACNC,KAAM,WACNC,YAAa,sCACbC,UAAU,I,SCHRC,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,GAA4CC,EAAAA,EAAAA,GAAQ,CAACC,aAAAA,EAAcF,SAAAA,IAA5DG,EAAP,EAAOA,MAAOC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,aAEtBC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IACjCC,GAAaF,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IAEnChB,EAAmBW,EAAnBX,MAAOC,EAAYU,EAAZV,SAEd,OACI,kBAAMO,SAAUK,EAAhB,WACI,SAAC,KAAD,QAAWK,GAAIJ,EAASK,MAAOnB,EAAOY,aAAcA,GAAkBQ,EAAAA,SACtE,SAAC,KAAD,QAAWF,GAAID,EAAYE,MAAOlB,EAAUW,aAAcA,GAAkBQ,EAAAA,YAC5E,mBAAQC,UAAWC,EAAAA,EAAAA,QAAnB,qBAGX,EAED,ICxBe,SAASC,IACpB,OACI,+BACI,SAAC,EAAD,KAGX,CDoBDhB,EAAUiB,aAAe,CACrBhB,SAAU,WAAQ,E,4CE1BhBiB,EAAY,SAAC,GAAsG,IAArGP,EAAoG,EAApGA,GAAIhB,EAAgG,EAAhGA,MAAOiB,EAAyF,EAAzFA,MAAOhB,EAAkF,EAAlFA,KAAMS,EAA4E,EAA5EA,aAAcR,EAA8D,EAA9DA,KAAMsB,EAAwD,EAAxDA,QAASL,EAA+C,EAA/CA,UAAWhB,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,SAAUqB,EAAa,EAAbA,QACjGC,EAAgBP,EAAS,UAAMQ,EAAAA,EAAAA,MAAN,YAAsBR,GAAcQ,EAAAA,EAAAA,MAEnE,OACI,iBAAKR,UAAWQ,EAAAA,EAAAA,UAAhB,UACK3B,IAAS,kBAAO4B,QAASZ,EAAhB,SAAqBhB,KAC/B,kBAAOgB,GAAIA,EAAIC,MAAOA,EAAOO,QAASA,EAASvB,KAAMA,EAAM4B,SAAUnB,EAAcR,KAAMA,EAAMiB,UAAWO,EAAevB,YAAaA,EAAaC,SAAUA,EAAUqB,QAASA,MAG3L,EAED,MAEAF,EAAUD,aAAe,CACrBpB,KAAM,OACNE,UAAU,E,8DCId,IArBgB,SAAC,GAAgC,IAA9BI,EAA6B,EAA7BA,aAAcF,EAAe,EAAfA,SAC/B,GAA0BwB,EAAAA,EAAAA,WAAS,UAAKtB,IAAxC,eAAOC,EAAP,KAAcsB,EAAd,KAiBA,MAAO,CAAEtB,MAAAA,EAAOsB,SAAAA,EAAUrB,aAfL,SAAC,GAAgB,IAAdsB,EAAa,EAAbA,OACdf,EAA+Be,EAA/Bf,MAAOhB,EAAwB+B,EAAxB/B,KAAMC,EAAkB8B,EAAlB9B,KAAMsB,EAAYQ,EAAZR,QACrBS,EAAoB,aAAT/B,EAAsBsB,EAAUP,EACjDc,GAAS,SAAAG,GAAS,yBACbA,GADa,cAEfjC,EAAOgC,GAFQ,GAInB,EAQuCtB,aANnB,SAAAwB,GACnBA,EAAEC,iBACF9B,GAAS,UAAKG,IACdsB,GAAS,UAAKvB,GACf,EAGF,C,oBCpBD,KAAgB,UAAY,8BAA8B,MAAQ,0BAA0B,QAAU,4B","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/TextField/TextFiled.jsx","shared/hooks/useForm.js","webpack://react-homework-template/./src/shared/TextField/text-field.module.css?f539"],"sourcesContent":["const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    label: 'User email',\n    name: 'email',\n    type: 'email',\n    placeholder: 'Enter user email',\n    required: true,\n  },\n  password: {\n    label: 'User password',\n    name: 'password',\n    type: 'password',\n    placeholder: 'Enter user password (min 6 symbols)',\n    required: true,\n  },\n};\n\nexport default fields;\n","import { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\n//COMPONENTS\nimport useForm from '../../shared/hooks/useForm';\nimport TextField from \"../../shared/TextField/TextFiled\";\nimport styled from '../../shared/TextField/text-field.module.css'\nimport initialState from \"./initialState\";\nimport fields from \"./fields\";\n\nconst LoginForm = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n\n    const emailId = useMemo(()=> nanoid(), []);\n    const passwordId = useMemo(()=> nanoid(), []);\n\n    const {email, password} = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField id={emailId} value={email} handleChange={handleChange} {...fields.email} />\n            <TextField id={passwordId} value={password} handleChange={handleChange} {...fields.password} />\n            <button className={styled.btnForm}>Login</button>\n        </form>\n    )\n}\n\nexport default LoginForm;\n\nLoginForm.defaultProps = {\n    onSubmit: () => {}\n}\n\nLoginForm.propTypes = {\n    onSubmit: PropTypes.func,\n}\n","import LoginForm from \"components/LoginForm/LoginForm\";\nimport React from \"react\";\n\nexport default function LoginPage() {\n    return (\n        <>\n            <LoginForm/>\n        </>\n    )\n}","import PropTypes from \"prop-types\";\n\nimport styles from \"./text-field.module.css\";\n\nconst TextField = ({id, label, value, name, handleChange, type, checked, className, placeholder, required, pattern}) => {\n    const fullClassName = className ? `${styles.field} ${className}` : styles.field;\n\n    return (\n        <div className={styles.formGroup}>\n            {label && <label htmlFor={id}>{label}</label>}\n            <input id={id} value={value} checked={checked} name={name} onChange={handleChange} type={type} className={fullClassName} placeholder={placeholder} required={required} pattern={pattern} />\n        </div>\n    )\n}\n\nexport default TextField;\n\nTextField.defaultProps = {\n    type: \"text\",\n    required: false,\n}\n\nTextField.propTypes = {\n    id: PropTypes.string, \n    label: PropTypes.string, \n    value: PropTypes.string, \n    name: PropTypes.string.isRequired, \n    handleChange: PropTypes.func.isRequired, \n    type: PropTypes.string, \n    className: PropTypes.string, \n    placeholder: PropTypes.string,  \n    required: PropTypes.bool, \n    pattern: PropTypes.string,\n}","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"text-field_formGroup__5OJow\",\"field\":\"text-field_field__0xPaa\",\"btnForm\":\"text-field_btnForm__RhkaN\"};"],"names":["email","password","label","name","type","placeholder","required","LoginForm","onSubmit","useForm","initialState","state","handleChange","handleSubmit","emailId","useMemo","nanoid","passwordId","id","value","fields","className","styled","LoginPage","defaultProps","TextField","checked","pattern","fullClassName","styles","htmlFor","onChange","useState","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}