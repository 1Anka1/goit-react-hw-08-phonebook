{"version":3,"file":"static/js/34.2ad8c1f9.chunk.js","mappings":"+MAAaA,EAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,E,oCCExBC,E,MAAmBC,GAAAA,OAAa,CACpCC,QAAS,2DACTC,OAAQ,CACNC,OAAQ,MAICC,EAAW,mCAAG,sGACFL,EAAiBM,IAAI,KADnB,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAIXC,EAAW,mCAAG,WAAMD,GAAN,yFACMP,EAAiBS,KAAK,IAAKF,GADjC,uBACXG,EADW,EACjBH,KADiB,kBAElBG,GAFkB,2CAAH,sDAIXC,EAAc,mCAAG,WAAMC,GAAN,yFACLZ,EAAiBa,OAAjB,WAA4BD,IADvB,uBACpBL,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sD,kBCNdO,GAAgBC,EAAAA,EAAAA,IAC3B,iBAD2C,mCAE3C,WAAOC,EAAP,mFAAYC,EAAZ,EAAYA,gBAAZ,kBAEuBC,IAFvB,cAEUX,EAFV,yBAGWA,GAHX,yDAKWU,EAAgB,EAAD,KAL1B,yDAF2C,yD,IAYnBF,EAAAA,EAAAA,IACxB,eADwC,mCAExC,WAAOR,EAAP,mFAAeU,EAAf,EAAeA,gBAAf,kBAEyBC,EAAgBX,GAFzC,cAEUG,EAFV,yBAGWA,GAHX,yDAKWO,EAAgB,EAAD,KAL1B,yDAFwC,wDAUxC,CACEE,UAAW,SAACZ,EAAD,GAET,GAhCc,SAAC,EAAkBa,GAAc,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAI3B,OAHeF,EAASG,MACtB,SAAAC,GAAI,OAAIA,EAAKH,OAASA,GAAQG,EAAKF,SAAWA,CAA1C,GAGP,CA2BSG,CAAYlB,GADKmB,EADY,EAAfA,YACVN,SACuBO,OAC7B,OAAOC,EAAAA,OAAAA,QACL,UACA,uCAGL,KAIwBb,EAAAA,EAAAA,IAC3B,kBAD2C,mCAE3C,WAAOH,EAAP,iFAAaK,EAAb,EAAaA,gBAAb,kBAEUC,EAAmBN,GAF7B,gCAGWA,GAHX,yDAKWK,EAAgB,EAAD,KAL1B,yDAF2C,yD,mCC7C7C,EAAwB,2BAAxB,EAA4D,4B,SCItDY,EAAe,CACnBR,KAAM,GACNC,OAAQ,IAGK,SAASQ,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACrC,GAA0BC,EAAAA,EAAAA,UAASH,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KACMC,GAASC,EAAAA,EAAAA,MACTC,GAAWD,EAAAA,EAAAA,MAEXE,EAAe,SAAAC,GACpB,MAAwBA,EAAEC,OAAlBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MAEdP,GAAS,SAACQ,GACT,OAAO,kBACHA,GADJ,cAEErB,EAAOoB,GAET,GACD,EAOD,OACC,iCACM,uCACJ,+BACC,kBAAMV,SAVW,SAAAQ,GACpBA,EAAEI,iBACF,IAAQtB,EAAiBY,EAAjBZ,KAAMC,EAAWW,EAAXX,OACdS,EAAS,CAAEV,KAAAA,EAAMC,OAAAA,IACjBY,EAASL,EACT,EAKG,WACC,8BACC,eAAIe,UAAWC,EAAf,mBACA,kBACCjC,GAAIuB,EACJW,KAAK,OACLL,MAAOR,EAAMZ,KACbA,KAAK,OACL0B,SAAUT,EACVU,YAAY,+BACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIV,8BACC,eAAIP,UAAWC,EAAf,qBACA,kBACCjC,GAAIyB,EACJS,KAAK,MACLzB,KAAK,SACL0B,SAAUT,EACVG,MAAOR,EAAMX,OACb0B,YAAY,2BACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGV,mBAAQP,UAAWC,EAAnB,gCAKL,C,oBCrED,GAAgB,UAAY,gCCIb,SAASO,EAAT,GAAiC,IAAVzB,EAAS,EAATA,MACpC,GAAwB0B,EAAAA,EAAAA,MAAjBC,GAAP,eAEKC,EAAO5B,EAAM6B,KAAI,YAA2B,IAAxBnC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQV,EAAS,EAATA,GACvC,OACI,gBAAIgC,UAAWC,EAAAA,gBAAf,UACGxB,EADH,MACYC,EADZ,KACoB,mBAAQsB,UAAYC,EAAAA,UAAeY,QAAS,kBAAMH,EAAc1C,EAApB,EAA5C,iBADsBA,EAI9C,IACD,OACC,0BACC,wBAAK2C,KAGP,CCjBc,SAASG,EAAT,GAA6C,IAA3B3D,EAA0B,EAA1BA,OAAQ4D,EAAkB,EAAlBA,eACvC,OACI,iCACA,sCACA,kDACA,kBAAOb,KAAK,OAAOzB,KAAK,SAASoB,MAAO1C,EAAQgD,SAAUY,MAI/D,CDSDP,EAAYQ,UAAY,CACtBjC,MAAOkC,IAAAA,QACLA,IAAAA,MAAgB,CACdjD,GAAIiD,IAAAA,OAAAA,WACJxC,KAAMwC,IAAAA,OAAAA,WACNvC,OAAQuC,IAAAA,OAAAA,cAEVC,WACFR,cAAeO,IAAAA,KAAAA,YChBjBH,EAAOE,UAAY,CACjB7D,OAAQ8D,IAAAA,OAAAA,WACRE,aAAcF,IAAAA,KAAAA,YCdhB,MAA0B,yBAA1B,EAA+D,2BAA/D,EAAkG,uBCE5FG,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACXf,EAAQ,wBACd,OACE,oBAASN,UAAWC,EAApB,UACE,iBAAKD,UAAWC,EAAhB,WACY,eAAID,UAAWC,EAAf,SAA2BK,IACpCe,MAIR,EAEDD,EAAQJ,UAAY,CAClBV,MAAOW,IAAAA,QAGT,QCJe,SAASK,IACtB,OAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEA,GAAoDC,EAAAA,EAAAA,MAApD,IAAQ9D,KAAAA,OAAR,MAAc,GAAd,EAAkB+D,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,QAClCzE,GAAS0E,EAAAA,EAAAA,IAAY5E,GACrB6E,GAAWC,EAAAA,EAAAA,OAajBC,EAAAA,EAAAA,YAAU,WACRF,EAAS5D,IACV,GAAE,CAAC4D,IAEJ,IASMG,EAAStE,EAAKsE,OACpB,OACE,UAAC,EAAD,YACE,SAAC/C,EAAD,CAAaC,SAZI,SAAA+C,GACnBV,EAAWU,EACZ,KAWG,SAACpB,EAAD,CAAQC,eATW,SAAApB,GACrB,IAAQE,EAAUF,EAAEC,OAAZC,MACRiC,GAASK,EAAAA,EAAAA,GAAUtC,GACpB,EAM2C1C,OAAQA,IAC/CwE,GAAaM,EAAS,GACrB,SAACzB,EAAD,CAAazB,MA7BjBpB,EACGR,QACC,gBAAGsB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACED,EAAK2D,oBAAoBC,SAASlF,EAAOiF,sBACzC1D,EAAO2D,SAASlF,EAFlB,IAIDmF,MAAK,SAACC,EAAcC,GAAf,OACJD,EAAa9D,KAAKgE,cAAcD,EAAc/D,KAD1C,OAyBJ,kDAEDiD,IAAa,sCACbE,IAAW,wDAGjB,CC1DD,IAQA,EARuB,WACnB,OACI,gBAAK5B,UAAU,YAAf,UACI,SAACsB,EAAD,KAGX,C","sources":["redux/filter/selectors.js","shared/api/contacts.js","redux/contacts/operations.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/Contacts/Contacts.jsx","pages/MyContactPage/MyContactPage.jsx"],"sourcesContent":["export const getFilter = store => store.filter;\n","import axios from 'axios';\n\nconst inctanceContacts = axios.create({\n  baseURL: 'https://6363c7828a3337d9a2e7a4e3.mockapi.io/api/contacts',\n  params: {\n    _limit: 12,\n  },\n});\n\nexport const getContacts = async () => {\n  const { data } = await inctanceContacts.get('/');\n  return data;\n};\nexport const addContacts = async data => {\n  const { data: result } = await inctanceContacts.post('/', data);\n  return result;\n};\nexport const removeContacts = async id => {\n  const { data } = await inctanceContacts.delete(`/${id}`);\n  return data;\n};\n","import * as api from 'shared/api/contacts';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst isDublicate = ({ name, number }, contacts) => {\n  const result = contacts.find(\n    item => item.name === name && item.number === number\n  );\n  return result;\n};\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetch',\n  async (_, { rejectWithValue }) => {\n    try {\n      const data = await api.getContacts();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/add',\n  async (data, { rejectWithValue }) => {\n    try {\n      const result = await api.addContacts(data);\n      return result;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n  {\n    condition: (data, { getState }) => {\n      const { contacts } = getState();\n      if (isDublicate(data, contacts.items)) {\n        return Report.warning(\n          'Warning',\n          'User is already in the contact list.'\n        );\n      }\n    },\n  }\n);\n\nexport const removeContact = createAsyncThunk(\n  'contacts/remove',\n  async (id, { rejectWithValue }) => {\n    try {\n      await api.removeContacts(id);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactForm_title__jZguf\",\"addBtn\":\"ContactForm_addBtn__CACuJ\"};","import React, { useState } from 'react'\nimport { nanoid } from 'nanoid'\n//COMPONENTS\nimport css from './ContactForm.module.css'\n\nconst initialState = {\n\t\tname: '',\n\t\tnumber: '',\n}\n\nexport default function ContactForm({ onSubmit }) {\n\tconst [state, setState] = useState(initialState);\n\tconst nameId = nanoid()\n\tconst numberId = nanoid()\n\n\tconst handleChange = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tsetState((prev) => {\n\t\t\treturn {\n\t\t\t\t...prev,\n\t\t\t\t[name]: value,\n\t\t\t}\n\t\t}) \n\t}\n\tconst handelSubmit = e => {\n\t\te.preventDefault()\n\t\tconst { name, number } = state;\n\t\tonSubmit({ name, number })\n\t\tsetState(initialState);\n\t}\n\treturn (\n\t\t<>\n\t\t      <h1>Phonebook</h1>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<form onSubmit={handelSubmit}>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<h2 className={css.title}>Name</h2>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid={nameId}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={state.name}\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter your full name \"\n\t\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<h2 className={css.title}>Number</h2>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid={numberId}\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={state.number}\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter your number\"\n\t\t\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<button className={css.addBtn}>Add Contact</button>\n\t\t\t\t\t</form>\n\t\t\t</fieldset>\n\t\t\t</>\n\t)\n};","// extracted by mini-css-extract-plugin\nexport default {\"remoteBtn\":\"ContactList_remoteBtn__PYF8T\"};","import PropTypes from 'prop-types';\nimport React from 'react'\nimport { useRemoveContactMutation } from 'redux/contacts/api';\nimport css from './ContactList.module.css'\n\nexport default function ContactList({ items }) {\n  const [removeContact] = useRemoveContactMutation()\n\n\tconst elem = items.map(({ name, number, id }) => {\n\t\treturn (\n      <li className={css.contactListItem } key={id}>\n        {name} : {number} <button className={ css.remoteBtn} onClick={() => removeContact(id)}>x</button>\n\t\t\t</li>\n\t\t)\n\t})\n\treturn (\n\t\t<div>\n\t\t\t<ol>{elem}</ol>\n\t\t</div>\n\t)\n}\nContactList.prototype = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from \"react\";\n\nexport default function Filter({ filter, onChangeFilter }) {\n  return (\n      <>\n      <h1>Contacts</h1>\n      <p>Find contact by name:</p>\n      <input type=\"text\" name='filter' value={filter} onChange={onChangeFilter} />\n      </>\n\n    )\n}\nFilter.prototype = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"container\":\"Section_container__vEvWA\",\"title\":\"Section_title__SLHvV\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ children }) => {\n  const title = 'Task - 2 Contact book';\n  return (\n    <section className={css.section}>\n      <div className={css.container}>\n        {title && <h2 className={css.title}>{title}</h2>}\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.prototype = {\n  title: PropTypes.string,\n};\n\nexport default Section;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\n//REDUX\nimport { getFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice'\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/contacts/api';\n\n//COMPONENTS\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Section from 'components/Section';\n\nexport default function Contacts() {\n  const [addContact] = useAddContactMutation();\n\n  const { data =[], isLoading, isSuccess, isError } = useGetContactsQuery();\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = () =>\n    data\n      .filter(\n        ({ name, number }) =>\n          name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) ||\n          number.includes(filter)\n      )\n      .sort((firstContact, secondContact) =>\n        firstContact.name.localeCompare(secondContact.name)\n     );\n  \n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  const onAddContact = contact => {\n    addContact(contact)\n  };\n\n  const onChangeFilter = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value))\n  };\n\n  const length = data.length;\n  return (\n    <Section>\n      <ContactForm onSubmit={onAddContact} />\n      <Filter onChangeFilter={onChangeFilter} filter={filter} />\n      {isSuccess && length > 0 ? (\n        <ContactList items={filteredContacts()} />\n      ) : (\n        <p>Contact list is empty.</p>\n      )}\n      {isLoading && <p>...loading</p>}\n      {isError && <p>oops, something went wrong</p>}\n    </Section>\n  );\n}","import Contacts from \"components/Contacts/Contacts\";\n\nconst MyContactsPage = () => {\n    return (\n        <div className=\"container\">\n            <Contacts />\n        </div>\n    )\n}\n\nexport default MyContactsPage;"],"names":["getFilter","store","filter","inctanceContacts","axios","baseURL","params","_limit","getContacts","get","data","addContacts","post","result","removeContacts","id","delete","fetchContacts","createAsyncThunk","_","rejectWithValue","api","condition","contacts","name","number","find","item","isDublicate","getState","items","Report","initialState","ContactForm","onSubmit","useState","state","setState","nameId","nanoid","numberId","handleChange","e","target","value","prev","preventDefault","className","css","type","onChange","placeholder","pattern","title","required","ContactList","useRemoveContactMutation","removeContact","elem","map","onClick","Filter","onChangeFilter","prototype","PropTypes","isRequired","changeFilter","Section","children","Contacts","useAddContactMutation","addContact","useGetContactsQuery","isLoading","isSuccess","isError","useSelector","dispatch","useDispatch","useEffect","length","contact","setFilter","toLocaleLowerCase","includes","sort","firstContact","secondContact","localeCompare"],"sourceRoot":""}