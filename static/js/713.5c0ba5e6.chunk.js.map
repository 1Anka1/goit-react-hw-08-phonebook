{"version":3,"file":"static/js/713.5c0ba5e6.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Contacts/ContactForm/ContactForm.module.css?4d46","components/Contacts/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Contacts/ContactList/ContactList.module.css?357e","components/Contacts/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Section/Section.module.css?e8d7","components/Contacts/Section/Section.jsx","components/Contacts/Contacts.jsx","pages/MyContactPage/MyContactPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["export const getFilter = store => store.filter;\n","export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFiltredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalisedFilter = filter.toLocaleLowerCase();\n  const filtredContacts = contacts.filter(({ name }) => {\n    const normalisedName = name.toLocaleLowerCase();\n    const result = normalisedName.includes(normalisedFilter);\n    return result;\n  });\n  return filtredContacts;\n};\n\n// export const filteredContacts = ({ contacts, filter }) =>\n\n//   contacts\n// .filter(\n//       ({ name, number }) =>\n//         name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) ||\n//         number.includes(filter)\n//     )\n//     .sort((firstContact, secondContact) =>\n//       firstContact.name.localeCompare(secondContact.name)\n//     );\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactForm_title__agZmt\",\"inputForm\":\"ContactForm_inputForm__Ug5Wb\",\"addBtn\":\"ContactForm_addBtn__-sK18\"};","import React, { useState } from 'react'\nimport { nanoid } from 'nanoid'\n//COMPONENTS\nimport css from './ContactForm.module.css'\n\nconst initialState = {\n\t\tname: '',\n\t\tnumber: '',\n}\n\nexport default function ContactForm({ onSubmit }) {\n\tconst [state, setState] = useState(initialState);\n\tconst nameId = nanoid()\n\tconst numberId = nanoid()\n\n\tconst handleChange = e => {\n\t\tconst { name, value } = e.target;\n\n\t\tsetState((prev) => {\n\t\t\treturn {\n\t\t\t\t...prev,\n\t\t\t\t[name]: value,\n\t\t\t}\n\t\t}) \n\t}\n\tconst handelSubmit = e => {\n\t\te.preventDefault()\n\t\tconst { name, number } = state;\n\t\tonSubmit({ name, number })\n\t\tsetState(initialState);\n\t}\n\treturn (\n\t\t<>\n\t\t      <h1>Phonebook</h1>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<form onSubmit={handelSubmit}>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<h2 className={css.title}>Name</h2>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={css.inputForm}\n\t\t\t\t\t\t\t\tid={nameId}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={state.name}\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter your full name \"\n\t\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<h2 className={css.title}>Number</h2>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={css.inputForm}\n\t\t\t\t\t\t\t\tid={numberId}\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={state.number}\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter your number\"\n\t\t\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<button className={css.addBtn}>Add Contact</button>\n\t\t\t\t\t</form>\n\t\t\t</fieldset>\n\t\t\t</>\n\t)\n};","// extracted by mini-css-extract-plugin\nexport default {\"remoteBtn\":\"ContactList_remoteBtn__B9W9v\",\"contactList\":\"ContactList_contactList__Xc7yH\"};","import PropTypes from 'prop-types';\nimport React from 'react'\nimport { useDispatch } from 'react-redux';\n\n// import { useRemoveContactMutation } from 'redux/contacts/api';\n// const [removeContact] = useRemoveContactMutation()\n\nimport css from './ContactList.module.css'\nimport { removeContact } from 'redux/contacts/operations';\n\nexport default function ContactList({ items }) {\n  const dispatch = useDispatch();\n\n   const onRemoveBook = id => {\n        dispatch(removeContact(id));\n   };\n  \n  const elem = items.map(({ name, number, id }) => {\n\t\treturn (\n      <li className={css.contactListItem } key={id}>\n        {name} : {number} <button className={ css.remoteBtn} onClick={() => onRemoveBook(id)}>x</button>\n\t\t\t</li>\n\t\t)\n\t})\n\treturn (\n\t\t<div>\n\t\t\t<ol className={css.contactList}>{elem}</ol>\n\t\t</div>\n\t)\n}\nContactList.prototype = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from \"react\";\n\nexport default function Filter({ filter, onChangeFilter }) {\n  return (\n      <>\n      <h1>Contacts</h1>\n      <p>Find contact by name:</p>\n      <input type=\"text\" name='filter' value={filter} onChange={onChangeFilter} />\n      </>\n\n    )\n}\nFilter.prototype = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__HDZEH\",\"container\":\"Section_container__-QgOu\",\"title\":\"Section_title__kp0vp\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ children }) => {\n  const title = 'Task - 2 Contact book';\n  return (\n    <section className={css.section}>\n      <div className={css.container}>\n        {title && <h2 className={css.title}>{title}</h2>}\n        {children}\n      </div>\n    </section>\n  );\n};\n\nSection.prototype = {\n  title: PropTypes.string,\n};\n\nexport default Section;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\n//REDUX\nimport { getFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/slice'\nimport { fetchContacts, addContact } from 'redux/contacts/operations';\nimport {getFiltredContacts, getState} from '../../redux/contacts/selectors'\n// import { useGetContactsQuery, useAddContactMutation } from 'redux/contacts/api';\n\n//COMPONENTS\nimport ContactForm from 'components/Contacts/ContactForm';\nimport ContactList from 'components/Contacts/ContactList';\nimport Filter from 'components/Filter';\nimport Section from './Section';\n\nexport default function Contacts() {\n  // const [addContact] = useAddContactMutation();\n  // const { data =[], isLoading, isSuccess, isError } = useGetContactsQuery();\n\n  const contacts = useSelector(getFiltredContacts)\n  const {loading, error} = useSelector(getState);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  \n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  const onAddContact = data => {\n    const action = addContact(data)\n    dispatch(action)\n  };\n\n  const onChangeFilter = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value))\n  };\n\n  const length = contacts.length;\n\n  return (\n    <Section>\n      <ContactForm onSubmit={onAddContact} />\n      <Filter onChangeFilter={onChangeFilter} filter={filter} />\n      {!loading && length > 0 ? (\n        <ContactList items={contacts} />\n      ) : (\n        <p>Contact list is empty.</p>\n      )}\n      {loading && <p>...loading</p>}\n      {error && <p>oops, something went wrong</p>}\n    </Section>\n  );\n}","//COMPONENTS\nimport Contacts from 'components/Contacts/Contacts';\n//REDUX\nconst MyContactsPage = () => {\n  return (\n    <div className=\"container\">\n      <Contacts />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getFilter","store","filter","getState","contacts","loading","error","getFiltredContacts","items","normalisedFilter","toLocaleLowerCase","name","includes","initialState","number","ContactForm","onSubmit","useState","state","setState","nameId","nanoid","numberId","handleChange","e","target","value","prev","preventDefault","className","css","id","type","onChange","placeholder","pattern","title","required","ContactList","dispatch","useDispatch","elem","map","onClick","removeContact","onRemoveBook","Filter","onChangeFilter","prototype","PropTypes","isRequired","changeFilter","Section","children","Contacts","useSelector","useEffect","fetchContacts","length","data","action","addContact","setFilter","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}